# Scratchpad Management Patterns

Requirements:
  mandatory: true
  update_frequency: "continuously during work"
  minimum_content: "detailed work log"
  failure_consequence: "task marked as failed"
  location: "tasks/active/task-X/scratchpad.md"

Content_Guidelines:
  must_include:
    - "Every command executed"
    - "Errors encountered and solutions"
    - "Useful code snippets discovered"
    - "API endpoints and parameters"
    - "Decision rationale"
    - "Patterns identified"
    - "Configuration values"
    - "Test commands that work"
  good_practices:
    - "Use markdown formatting"
    - "Include timestamps for major steps"
    - "Copy exact error messages"
    - "Note what DIDN'T work too"
    - "Link to helpful resources"
    - "Create reusable templates"
  anti_patterns:
    - "Single line updates"
    - "Vague descriptions"
    - "Missing error details"
    - "No code examples"
    - "Forgetting discoveries"

Structure:
  header: |
    # Task X: [Title] - Scratchpad
    
    Agent: AGENT-X
    Started: [timestamp]
    
    ## Key Discoveries
    [Running list of important findings]
    
    ## Work Log
  sections:
    key_discoveries:
      - "Important API details"
      - "Configuration requirements"
      - "Useful commands"
      - "Pattern implementations"
    work_log:
      - "Timestamped entries"
      - "Subtask boundaries"
      - "Error troubleshooting"
      - "Solution attempts"
    code_snippets:
      - "Working examples"
      - "Failed attempts"
      - "Final solutions"
    resources:
      - "Documentation links"
      - "Stack Overflow answers"
      - "GitHub examples"

Mandatory_Updates:
  triggers:
    - "Starting new subtask"
    - "Encountering error"
    - "Finding solution"
    - "Making decision"
    - "Discovering pattern"
    - "Completing subtask"
  format: |
    ## Subtask X.Y: [Title]
    Started: [timestamp]
    
    ### Objective
    [What I'm trying to achieve]
    
    ### Approach
    [How I plan to do it]
    
    ### Progress
    - [x] Step 1: Description
    - [ ] Step 2: Description
    
    ### Discoveries
    - Found that X requires Y
    - API endpoint: POST /api/thing
    - Error: "message" - Fixed by: solution
    
    ### Code that works:
    ```language
    [working code]
    ```
    
    ### Commands used:
    ```bash
    [useful commands]
    ```
  validation:
    - "Each subtask has entry"
    - "Errors have solutions"
    - "Code examples included"
    - "Decisions explained"
    - "Progress tracked"